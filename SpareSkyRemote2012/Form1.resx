<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAAAIADhAwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAQAAAAEAgGAAAAH/P/YQAAAAFz
        UkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAADdklEQVQ4T0WT3U+T
        VxzHn9td7m7/wK6WLItzOGspfYGWlra8tlAoBVrCixXHAh0kI74RxliQgUMREbAOlSFTAijOMGEZDisv
        ApUXEVgVYzazrNnL/We/Pje7OMl5znPO5/y+39/3KGZHMU5XAE9pLTmeaoxWD468cryBOtLsPmzZAUw2
        Lxk55RisPjJdQcyOUg7pMsn2VKLk+46TXVBFemYJ1qxSMt0VnO0eIrLyEpf3OIb0QgFWkJrhw+wUSLoP
        iyMg4HIBF6FYs/xy0I/FWapuTCxe6L/N85f/SkVB+S5Eb8lHl1aAPr0YowDSMso4rM8lxZyP4g2E1AND
        N3/k25FpGk92MXBtivWdP1VZicoaTnTQ1hWWkmtEVpnI9FL/eQc19S0oX18YJrr9B6tbb9h+8Tc3x39m
        8Ppddvb/UaXVhJp58DDKxu5vnGrrExllqi93ppdpab+MMjv/jKfPf6fr4gitHYPUNrTSPzQp0Df4Kuq5
        decByxsviKzucHcmgl0Mrq49xWL0FcfqmlHGpiJy81+MTsxxrvc7SisbuHR1jIW1GBevjLK0vsf5/mG+
        7OxjeTNGsO40PQPfM/PLunTGj1L1yWnGf3jMw8UdkfGa3vBtBq5P8GRzn3uzCwKI4T8awl1SzUxklfDI
        JDPzUQZvTIixeYkulIlxnWrrFqIxKXWP4bFpVrb2+abvGgtPd2k42YbJ7qInPMzj6LZAf+WzE1+RYhFA
        U3O3mDYhnbjFT482ebSyx8j4DGvbryk7Ws/03BLj9+ew5XoJhppYXN9lNrJGVkFAALkol8ITYkhMNL8S
        tzdE3y16r4wJbEtCVU5791WpKkZ5sBFPWZD5J8/Eo1E0egeGBMBf3URTcw9fnA0TauqU1h3j08Z26f05
        NbIuby3nL4+J82eoa2xlScwNVIXQ6BwkG50oyakeIRWjNRZwxOBWh1nCkqTNIdVWIolzSeKKBFbC0I17
        TN2PkGLMIs3q5oODepREqhJDa3JLbIvVzOsthWp0DelF/88tHian5jnT0s37B3SYpHytPgMlNUPybS1S
        H03i1X2cki0H3BLZYjQG2WRyqf/MDh/+ynq52UWywc6RFBsHkgwoSVp7XGPIjh/SOeN6szuuNeXGNcac
        uE7mibWDGlv8Qxl6S57MzfHkVGc8Oc0ef/e9j+Jvvf1O/D+NJHBNgh6DhQAAAABJRU5ErkJggg==
</value>
  </data>
</root>